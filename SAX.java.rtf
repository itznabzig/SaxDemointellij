{\rtf1\ansi\ansicpg1252\cocoartf2577
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 import org.xml.sax.Attributes;\
import org.xml.sax.SAXException;\
import org.xml.sax.helpers.DefaultHandler;\
\
import javax.xml.parsers.ParserConfigurationException;\
import javax.xml.parsers.SAXParser;\
import javax.xml.parsers.SAXParserFactory;\
import java.io.IOException;\
\
public class SaxParserExample \{\
    public static void main(String[] args) \{\
        SAXParserFactory saxParserFactory = SAXParserFactory.newInstance();\
        try \{\
            SAXParser saxParser = saxParserFactory.newSAXParser();\
            DefaultHandler handler = new DefaultHandler() \{\
                boolean name = false;\
                boolean price = false;\
                boolean description = false;\
                boolean calories = false;\
\
                @Override\
                public void startElement(String uri, String localName, String qName, Attributes attributes)\
                        throws SAXException \{\
                    if (qName.equalsIgnoreCase("name")) \{\
                        name = true;\
                    \} else if (qName.equalsIgnoreCase("price")) \{\
                        price = true;\
                    \} else if (qName.equalsIgnoreCase("description")) \{\
                        description = true;\
                    \} else if (qName.equalsIgnoreCase("calories")) \{\
                        calories = true;\
                    \}\
                \}\
\
                @Override\
                public void endElement(String uri, String localName, String qName) throws SAXException \{\
                \}\
\
                @Override\
                public void characters(char ch[], int start, int length) throws SAXException \{\
                    if (name) \{\
                        System.out.println("Name: " + new String(ch, start, length));\
                        name = false;\
                    \} else if (price) \{\
                        System.out.println("Price: " + new String(ch, start, length));\
                        price = false;\
                    \} else if (description) \{\
                        System.out.println("Description: " + new String(ch, start, length));\
                        description = false;\
                    \} else if (calories) \{\
                        System.out.println("Calories: " + new String(ch, start, length));\
                        calories = false;\
                    \}\
                \}\
            \};\
\
            saxParser.parse("food.xml", handler);\
        \} catch (ParserConfigurationException | SAXException | IOException e) \{\
            e.printStackTrace();\
        \}\
    \}\
\}\
}